name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release-stable:
    runs-on: ubuntu-24.04
    name: Release Stable
    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: "chore(release): new version"
          commit: "chore(release): new version"
          publish: pnpm release
          version: pnpm changeset-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          NPM_TOKEN: ${{ secrets.NPM_PUBLISH }}

      - name: Get current package version
        id: get_version
        run: echo "CURRENT_PACKAGE_VERSION=$(node -p \"require('./packages/message-pickup-repository-pg/package.json').version\")" >> $GITHUB_ENV

      - name: Create Github Release
        if: steps.changesets.outputs.published == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.CURRENT_PACKAGE_VERSION }}

  release-unstable:
    runs-on: ubuntu-24.04
    name: Release Unstable (alpha)
    needs: release-stable
    if: always() && github.event_name == 'push' && needs.release-stable.outputs.published == 'false'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Creating .npmrc
        run: |
          cat << EOF > ".npmrc"
          //registry.npmjs.org/:_authToken=${NPM_TOKEN}
          always-auth=true
          registry=https://registry.npmjs.org/
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH }}

      - name: Create unstable snapshot changeset
        run: |
          cat << 'EOF' > .changeset/snapshot-template-changeset.md
          ---
          '@credo-ts/transport-queue-postgres': patch
          '@credo-ts/didcomm-msg-pickup-repository-dynamodb': patch
          ---

          snapshot release
          EOF

      - name: Version snapshot (alpha)
        run: pnpm changeset version --snapshot alpha
      - name: Style fix
        run: pnpm style:fix || true

      - name: Build
        run: pnpm -r run build:all

      - name: Publish snapshot with dist-tag alpha
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH }}
        run: pnpm changeset publish --tag alpha

      - name: Compute alpha tag version (from primary package)
        run: echo "CURRENT_PACKAGE_VERSION=$(node -p \"require('./packages/transport-queue-postgres/package.json').version\")" >> $GITHUB_ENV

      - name: Push alpha git tag
        run: |
          git config --global user.name  "${GITHUB_ACTOR:-github-actions[bot]}"
          git config --global user.email "${GITHUB_ACTOR:-github-actions[bot]}@users.noreply.github.com"
          git tag v${{ env.CURRENT_PACKAGE_VERSION }}
          git push origin v${{ env.CURRENT_PACKAGE_VERSION }} --no-verify || true
